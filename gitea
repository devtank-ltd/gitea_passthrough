#! /bin/bash
# This is a proxy script. It passes on git hook events to a gitea instance, with a bind mount of the git repo, in LXC.

if [ "$1" != "hook" ]
then
  echo "Unknown gitea command."
  exit 1
fi

# Switch to git user, and pass through git env vars
if [ "$ENV_FILE" == "" ]
then
  env_file=$(mktemp)
  chmod 777 $env_file
  env | grep GIT > $env_file
  if [ "$(stat -c %s $env_file)" -gt 1 ]
  then
    export ENV_FILE=$env_file
    exec sudo --preserve-env=ENV_FILE -u git $0 $@
  else
    rm $env_file
    echo "No git env vars!"
    exit 1
  fi
fi

repo=$(basename -s ".git" $(pwd))

source /home/git/mysql_vars

org=($(mysql -u $MYSQL_USER --password=$MYSQL_PW $MYSQL_DB --disable-column-names <<< "select repository.id, owner_name, user.lower_name from repository join user on user.id=repository.owner_id where repository.name='$repo' order by id limit 1"))

org_id=${org[0]}
org_name=${org[1]}
org_ident=${org[2]}

if [ -z "$org_id" ]
then
  echo "Can't find repo in gitea DB."
  rm $ENV_FILE
  exit 1
fi


git_repo=$(pwd)
gitea_repo=/$org_name/$repo.git
gitea_repo_real=/home/git/data/gitea-repositories/$org_ident/$repo.git

cmds=
# Static environment variables
while read line
do
  cmds+="export $line; "
done < /home/git/gitea_static

# Project environment variables
cmds+="export GITEA_REPO_NAME=$repo; export GITEA_REPO_ID=$org_id; export GITEA_REPO_USER_NAME=$org_ident; export SSH_ORIGINAL_COMMAND=git-receive-pack\ '$gitea_repo'; "

# Dynamic environment variables
while read line
do
  cmds+="export ${line/$git_repo/$gitea_repo}; "
done < $ENV_FILE
rm $ENV_FILE

cmds+="cd $gitea_repo_real; /home/git/gitea $@"

echo "Legacy git \"$git_repo\" -> gitea \"$gitea_repo\""

ssh $(cat /home/git/gitea_lxc) "$cmds"
